#ifndef _DLMS_ENUM_H_
#define _DLMS_ENUM_H_

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef enum {
    PDU_DLMS_AUTHENTICATION_NONE        = 0, // No authentication is used.
    PDU_DLMS_AUTHENTICATION_LOW         = 1, // Low authentication is used.
    PDU_DLMS_AUTHENTICATION_HIGH        = 2, // High authentication is used. Because DLMS/COSEM specification does not specify details of the HLS mechanism we have implemented Indian standard. Texas Instruments also uses this.
    PDU_DLMS_AUTHENTICATION_HIGH_MD5    = 3, // High authentication is used. Password is hashed with MD5.
    PDU_DLMS_AUTHENTICATION_HIGH_SHA1   = 4, // High authentication is used. Password is hashed with SHA1.
    PDU_DLMS_AUTHENTICATION_HIGH_GMAC   = 5, // High authentication is used. Password is hashed with GMAC.
    PDU_DLMS_AUTHENTICATION_HIGH_SHA256 = 6, // High authentication is used. Password is hashed with SHA-256.
    PDU_DLMS_AUTHENTICATION_HIGH_ECDSA  = 7, // High authentication is used. Password is hashed with ECDSA.
} PDU_DLMS_AUTHENTICATION;

typedef enum {
    PDU_DLMS_CONFORMANCE_RESERVED_ZERO                      = 0x800000, // Reserved zero conformance bit.
    PDU_DLMS_CONFORMANCE_GENERAL_PROTECTION                 = 0x400000, // General protection conformance bit.
    PDU_DLMS_CONFORMANCE_GENERAL_BLOCK_TRANSFER             = 0x200000, // General block transfer conformance bit.
    PDU_DLMS_CONFORMANCE_READ                               = 0x100000, // Read conformance bit.
    PDU_DLMS_CONFORMANCE_WRITE                              = 0x080000, // Write conformance bit.
    PDU_DLMS_CONFORMANCE_UN_CONFIRMED_WRITE                 = 0x040000, // Un confirmed write conformance bit.
    PDU_DLMS_CONFORMANCE_RESERVED_SIX                       = 0x020000, // Reserved six conformance bit.
    PDU_DLMS_CONFORMANCE_RESERVED_SEVEN                     = 0x010000, // Reserved seven conformance bit.
    PDU_DLMS_CONFORMANCE_ATTRIBUTE_0_SUPPORTED_WITH_SET     = 0x008000, // Attribute 0 supported with set conformance bit.
    PDU_DLMS_CONFORMANCE_PRIORITY_MGMT_SUPPORTED            = 0x004000, // Priority mgmt supported conformance bit.
    PDU_DLMS_CONFORMANCE_ATTRIBUTE_0_SUPPORTED_WITH_GET     = 0x002000, // Attribute 0 supported with get conformance bit.
    PDU_DLMS_CONFORMANCE_BLOCK_TRANSFER_WITH_GET_OR_READ    = 0x001000, // Block transfer with get or read conformance bit.
    PDU_DLMS_CONFORMANCE_BLOCK_TRANSFER_WITH_SET_OR_WRITE   = 0x000800, // Block transfer with set or write conformance bit.
    PDU_DLMS_CONFORMANCE_BLOCK_TRANSFER_WITH_ACTION         = 0x000400, // Block transfer with action conformance bit.
    PDU_DLMS_CONFORMANCE_MULTIPLE_REFERENCES                = 0x000200, // multiple references conformance bit.
    PDU_DLMS_CONFORMANCE_INFORMATION_REPORT                 = 0x000100, // Information report conformance bit.
    PDU_DLMS_CONFORMANCE_DATA_NOTIFICATION                  = 0x000080, // Data notification conformance bit.
    PDU_DLMS_CONFORMANCE_ACCESS                             = 0x000040, // Access conformance bit.
    PDU_DLMS_CONFORMANCE_PARAMETERIZED_ACCESS               = 0x000020, // Parameterized access conformance bit.
    PDU_DLMS_CONFORMANCE_GET                                = 0x000010, // Get conformance bit.
    PDU_DLMS_CONFORMANCE_SET                                = 0x000008, // Set conformance bit.
    PDU_DLMS_CONFORMANCE_SELECTIVE_ACCESS                   = 0x000004, // Selective access conformance bit.
    PDU_DLMS_CONFORMANCE_EVENT_NOTIFICATION                 = 0x000002, // Event notification conformance bit.
    PDU_DLMS_CONFORMANCE_ACTION                             = 0x000001, // Action conformance bit.
} PDU_DLMS_CONFORMANCE;

typedef enum {
    DLMS_PDU_DATA_TYPE_NONE = 0,
    DLMS_PDU_DATA_TYPE_BOOLEAN = 3,
    DLMS_PDU_DATA_TYPE_BIT_STRING = 4,
    DLMS_PDU_DATA_TYPE_INT32 = 5,
    DLMS_PDU_DATA_TYPE_UINT32 = 6,
    DLMS_PDU_DATA_TYPE_OCTET_STRING = 9,
    DLMS_PDU_DATA_TYPE_STRING = 10,
    DLMS_PDU_DATA_TYPE_BINARY_CODED_DESIMAL = 13,
    DLMS_PDU_DATA_TYPE_STRING_UTF8 = 12,
    DLMS_PDU_DATA_TYPE_INT8 = 15,
    DLMS_PDU_DATA_TYPE_INT16 = 16,
    DLMS_PDU_DATA_TYPE_UINT8 = 17,
    DLMS_PDU_DATA_TYPE_UINT16 = 18,
    DLMS_PDU_DATA_TYPE_INT64 = 20,
    DLMS_PDU_DATA_TYPE_UINT64 = 21,
    DLMS_PDU_DATA_TYPE_ENUM = 22,
    DLMS_PDU_DATA_TYPE_FLOAT32 = 23,
    DLMS_PDU_DATA_TYPE_FLOAT64 = 24,
    DLMS_PDU_DATA_TYPE_DATETIME = 25,
    DLMS_PDU_DATA_TYPE_DATE = 26,
    DLMS_PDU_DATA_TYPE_TIME = 27,
    DLMS_PDU_DATA_TYPE_ARRAY = 1,
    DLMS_PDU_DATA_TYPE_STRUCTURE = 2,
    DLMS_PDU_DATA_TYPE_COMPACT_ARRAY = 19
} DLMS_PDU_DATA_TYPE;
    
typedef enum {
    DLMS_UNIT_NONE = 0,
    DLMS_UNIT_YEAR = 1,
    DLMS_UNIT_MONTH = 2,
    DLMS_UNIT_WEEK = 3,
    DLMS_UNIT_DAY = 4,
    DLMS_UNIT_HOUR = 5,
    DLMS_UNIT_MINUTE = 6,
    DLMS_UNIT_SECOND = 7,
    DLMS_UNIT_PHASE_ANGLEGEGREE = 8,
    DLMS_UNIT_TEMPERATURE = 9,
    DLMS_UNIT_LOCAL_CURRENCY = 10,
    DLMS_UNIT_LENGTH = 11,
    DLMS_UNIT_SPEED = 12,
    DLMS_UNIT_VOLUME_CUBIC_METER = 13,
    DLMS_UNIT_CORRECTED_VOLUME = 14,
    DLMS_UNIT_VOLUME_FLUX_HOUR = 15,
    DLMS_UNIT_CORRECTED_VOLUME_FLUX_HOUR = 16,
    DLMS_UNIT_VOLUME_FLUXDAY = 17,
    DLMS_UNIT_CORRECTE_VOLUME_FLUX_DAY = 18,
    DLMS_UNIT_VOLUME_LITER = 19,
    DLMS_UNIT_MASS_KG = 20,
    DLMS_UNIT_FORCE = 21,
    DLMS_UNIT_ENERGY = 22,
    PRESSURE_PASCAL = 23,
    DLMS_UNIT_PRESSURE_BAR = 24,
    DLMS_UNIT_ENERGY_JOULE = 25,
    DLMS_UNIT_THERMAL_POWER = 26,
    DLMS_UNIT_ACTIVE_POWER = 27,
    DLMS_UNIT_APPARENT_POWER = 28,
    DLMS_UNIT_REACTIVE_POWER = 29,
    DLMS_UNIT_ACTIVE_ENERGY = 30,
    DLMS_UNIT_APPARENT_ENERGY = 31,
    DLMS_UNIT_REACTIVE_ENERGY = 32,
    DLMS_UNIT_CURRENT = 33,
    DLMS_UNIT_ELECTRICAL_CHARGE = 34,
    DLMS_UNIT_VOLTAGE = 35,
    DLMS_UNIT_ELECTRICAL_FIELD_STRENGTH = 36,
    DLMS_UNIT_CAPACITY = 37,
    DLMS_UNIT_RESISTANCE = 38,
    DLMS_UNIT_RESISTIVITY = 39,
    DLMS_UNIT_MAGNETIC_FLUX = 40,
    DLMS_UNIT_INDUCTION = 41,
    DLMS_UNIT_MAGNETIC = 42,
    DLMS_UNIT_INDUCTIVITY = 43,
    DLMS_UNIT_FREQUENCY = 44,
    DLMS_UNIT_ACTIVE = 45,
    DLMS_UNIT_REACTIVE = 46,
    DLMS_UNIT_APPARENT = 47,
    DLMS_UNIT_V260 = 48,
    DLMS_UNIT_A260 = 49,
    DLMS_UNIT_MASS_KG_PER_SECOND = 50,
    DLMS_UNIT_CONDUCTANCE = 51,
    DLMS_UNIT_KELVIN = 52,
    DLMS_UNIT_V2H = 53,
    DLMS_UNIT_A2H = 54,
    DLMS_UNIT_CUBIC_METER_RV = 55,
    DLMS_UNIT_PERCENTAGE = 56,
    DLMS_UNIT_AMPERE_HOURS = 57,
    DLMS_UNIT_ENERGY_PER_VOLUME = 60,
    DLMS_UNIT_WOBBE = 61,
    DLMS_UNIT_MOLE_PERCENT = 62,
    DLMS_UNIT_MASS_DENSITY = 63,
    DLMS_UNIT_PASCAL_SECOND = 64,
    DLMS_UNIT_JOULE_KILOGRAM = 65,
    DLMS_UNIT_SIGNAL_STRENGTH = 70,
    DLMS_UNIT_OTHER = 254,
    DLMS_UNIT_NO_UNIT = 255
} DLMS_UNIT;

typedef enum {
    DLMS_OBJECT_TYPE_ALL = -1,
    DLMS_OBJECT_TYPE_NONE = 0,
    DLMS_OBJECT_TYPE_DATA = 1,
    DLMS_OBJECT_TYPE_REGISTER = 3,
    DLMS_OBJECT_TYPE_EXTENDED_REGISTER = 4,
    DLMS_OBJECT_TYPE_DEMAND_REGISTER = 5,
    DLMS_OBJECT_TYPE_REGISTER_ACTIVATION = 6,
    DLMS_OBJECT_TYPE_PROFILE_GENERIC = 7,
    DLMS_OBJECT_TYPE_CLOCK = 8,
    DLMS_OBJECT_TYPE_SCRIPT_TABLE = 9,
    DLMS_OBJECT_TYPE_SCHEDULE = 10,
    DLMS_OBJECT_TYPE_SPECIAL_DAYS_TABLE = 11,
    DLMS_OBJECT_TYPE_ASSOCIATION_SHORT_NAME = 12,
    DLMS_OBJECT_TYPE_ASSOCIATION_LOGICAL_NAME = 15,
    DLMS_OBJECT_TYPE_SAP_ASSIGNMENT = 17,
    DLMS_OBJECT_TYPE_IMAGE_TRANSFER = 18,
    DLMS_OBJECT_TYPE_IEC_LOCAL_PORT_SETUP = 19,
    DLMS_OBJECT_TYPE_ACTIVITY_CALENDAR = 20,
    DLMS_OBJECT_TYPE_REGISTER_MONITOR = 21,
    DLMS_OBJECT_TYPE_ACTION_SCHEDULE = 22,
    DLMS_OBJECT_TYPE_IEC_HDLC_SETUP = 23,
    DLMS_OBJECT_TYPE_IEC_TWISTED_PAIR_SETUP = 24,
    DLMS_OBJECT_TYPE_MBUS_SLAVE_PORT_SETUP = 25,
    DLMS_OBJECT_TYPE_UTILITY_TABLES = 26,
    DLMS_OBJECT_TYPE_MODEM_CONFIGURATION = 27,
    DLMS_OBJECT_TYPE_AUTO_ANSWER = 28,
    DLMS_OBJECT_TYPE_AUTO_CONNECT = 29,
    DLMS_OBJECT_TYPE_TCP_UDP_SETUP = 41,
    DLMS_OBJECT_TYPE_IP4_SETUP = 42,
    DLMS_OBJECT_TYPE_MAC_ADDRESS_SETUP = 43,
    DLMS_OBJECT_TYPE_PPP_SETUP = 44,
    DLMS_OBJECT_TYPE_GPRS_SETUP = 45,
    DLMS_OBJECT_TYPE_SMTP_SETUP = 46,
    DLMS_OBJECT_TYPE_REGISTER_TABLE = 61,
    DLMS_OBJECT_TYPE_STATUS_MAPPING = 63,
    DLMS_OBJECT_TYPE_DLMS_SECURITY_SETUP = 64,
    DLMS_OBJECT_TYPE_DISCONNECT_CONTROL = 70,
    DLMS_OBJECT_TYPE_LIMITER = 71,
    DLMS_OBJECT_TYPE_MBUS_CLIENT = 72,
    DLMS_OBJECT_TYPE_PUSH_SETUP = 40,
    DLMS_OBJECT_TYPE_MESSAGE_HANDLER = 60,
    DLMS_OBJECT_TYPE_PARAMETER_MONITOR = 65,
    DLMS_OBJECT_TYPE_WIRELESS_MODE_Q_CHANNEL = 73,
    DLMS_OBJECT_TYPE_MBUS_MASTER_PORT_SETUP = 74,
    DLMS_OBJECT_TYPE_ZIG_BEE_SAS_STARTUP = 101,
    DLMS_OBJECT_TYPE_ZIG_BEE_SAS_JOIN = 102,
    DLMS_OBJECT_TYPE_ZIG_BEE_SAS_APS_FRAGMENTATION = 103,
    DLMS_OBJECT_TYPE_ZIG_BEE_NETWORK_CONTROL = 104
} DLMS_OBJECT_TYPE;

typedef enum {
    DLMS_ACCESS_MODE_NONE = 0,
    DLMS_ACCESS_MODE_READ = 1,
    DLMS_ACCESS_MODE_WRITE = 2,
    DLMS_ACCESS_MODE_READ_WRITE = 3,
    DLMS_ACCESS_MODE_AUTHENTICATED_READ = 4,
    DLMS_ACCESS_MODE_AUTHENTICATED_WRITE = 5,
    DLMS_ACCESS_MODE_AUTHENTICATED_READ_WRITE = 6
} DLMS_ACCESS_MODE;

typedef enum {
    DLMS_METHOD_ACCESS_MODE_NONE = 0,
    DLMS_METHOD_ACCESS_MODE_ACCESS = 1,
    DLMS_METHOD_ACCESS_MODE_AUTHENTICATED_ACCESS = 2
} DLMS_METHOD_ACCESS_MODE;

//typedef enum {
//    DLMS_AUTHENTICATION_NONE,       // No authentication is used.
//    DLMS_AUTHENTICATION_LOW,        // Low authentication is used.
//    DLMS_AUTHENTICATION_HIGH,       // High authentication is used. Because DLMS/COSEM specification does not specify details of the HLS mechanism we have implemented Indian standard. Texas Instruments also uses this.
//    DLMS_AUTHENTICATION_HIGH_MD5,   // High authentication is used. Password is hashed with MD5.
//    DLMS_AUTHENTICATION_HIGH_SHA1,
//    DLMS_AUTHENTICATION_HIGH_GMAC,
//    DLMS_AUTHENTICATION_HIGH_SHA256,
//    DLMS_AUTHENTICATION_HIGH_ECDSA
//} DLMS_AUTHENTICATION;

typedef enum {
    DLMS_COMMAND_NONE = 0,
    DLMS_COMMAND_INITIATE_REQUEST = 0x1,
    DLMS_COMMAND_INITIATE_RESPONSE = 0x8,
    DLMS_COMMAND_READ_REQUEST = 0x5,
    DLMS_COMMAND_READ_RESPONSE = 0xC,
    DLMS_COMMAND_WRITE_REQUEST = 0x6,
    DLMS_COMMAND_WRITE_RESPONSE = 0xD,
    DLMS_COMMAND_GET_REQUEST = 0xC0,
    DLMS_COMMAND_GET_RESPONSE = 0xC4,
    DLMS_COMMAND_SET_REQUEST = 0xC1,
    DLMS_COMMAND_SET_RESPONSE = 0xC5,
    DLMS_COMMAND_METHOD_REQUEST = 0xC3,
    DLMS_COMMAND_METHOD_RESPONSE = 0xC7,
    DLMS_COMMAND_REJECTED = 0x97,
    DLMS_COMMAND_SNRM = 0x93,
    DLMS_COMMAND_UA = 0x73,
    DLMS_COMMAND_AARQ = 0x60,
    DLMS_COMMAND_AARE = 0x61,
    DLMS_COMMAND_DISC = 0x53,
    DLMS_COMMAND_RELEASE_REQUEST = 0x62,
    DLMS_COMMAND_RELEASE_RESPONSE = 0x63,
    DLMS_COMMAND_CONFIRMED_SERVICE_ERROR = 0x0E,
    DLMS_COMMAND_EXCEPTION_RESPONSE = 0xD8,
    DLMS_COMMAND_GENERAL_BLOCK_TRANSFER = 0xE0,
    DLMS_COMMAND_ACCESS_REQUEST = 0xD9,
    DLMS_COMMAND_ACCESS_RESPONSE = 0xDA,
    DLMS_COMMAND_DATA_NOTIFICATION = 0x0F,
    DLMS_COMMAND_GLO_GET_REQUEST = 0xC8,
    DLMS_COMMAND_GLO_GET_RESPONSE = 0xCC,
    DLMS_COMMAND_GLO_SET_REQUEST = 0xC9,
    DLMS_COMMAND_GLO_SET_RESPONSE = 0xCD,
    DLMS_COMMAND_GLO_GENERAL_CIPHERING = 0xDB,
    DLMS_COMMAND_GLO_EVENT_NOTIFICATION_REQUEST = 0xCA,
    DLMS_COMMAND_GLO_METHOD_REQUEST = 0xCB,
    DLMS_COMMAND_GLO_METHOD_RESPONSE = 0xCF,
    DLMS_COMMAND_GLO_INITIATE_REQUEST = 0x21,
    DLMS_COMMAND_GLO_READ_REQUEST = 37,
    DLMS_COMMAND_GLO_WRITE_REQUEST = 38,
    DLMS_COMMAND_GLO_INITIATE_RESPONSE = 40,
    DLMS_COMMAND_GLO_READ_RESPONSE = 44,
    DLMS_COMMAND_GLO_WRITE_RESPONSE = 45,
    DLMS_COMMAND_GENERAL_GLO_CIPHERING = 0xDB,
    DLMS_COMMAND_GENERAL_DED_CIPHERING = 0xDC,
    DLMS_COMMAND_GENERAL_CIPHERING = 0xDD,
    DLMS_COMMAND_INFORMATION_REPORT = 0x18,
    DLMS_COMMAND_EVENT_NOTIFICATION = 0xC2
} DLMS_COMMAND;

typedef enum {
    DLMS_SOURCE_DIAGNOSTIC_NONE = 0,
    DLMS_SOURCE_DIAGNOSTIC_NO_REASON_GIVEN = 1,
    DLMS_SOURCE_DIAGNOSTIC_APPLICATION_CONTEXT_NAME_NOT_SUPPORTED = 2,
    DLMS_SOURCE_DIAGNOSTIC_3 = 3,
    DLMS_SOURCE_DIAGNOSTIC_4 = 4,
    DLMS_SOURCE_DIAGNOSTIC_5 = 5,
    DLMS_SOURCE_DIAGNOSTIC_6 = 6,
    DLMS_SOURCE_DIAGNOSTIC_7 = 7,
    DLMS_SOURCE_DIAGNOSTIC_8 = 8,
    DLMS_SOURCE_DIAGNOSTIC_9 = 9,
    DLMS_SOURCE_DIAGNOSTIC_10 = 10,
    DLMS_SOURCE_DIAGNOSTIC_AUTHENTICATION_MECHANISM_NAME_NOT_RECOGNISED = 11,
    DLMS_SOURCE_DIAGNOSTIC_AUTHENTICATION_MECHANISM_NAME_REQUIRED = 12,
    DLMS_SOURCE_DIAGNOSTIC_AUTHENTICATION_FAILURE = 13,
    DLMS_SOURCE_DIAGNOSTIC_AUTHENTICATION_REQUIRED = 14,
} DLMS_SOURCE_DIAGNOSTIC;

typedef enum {
    DLMS_GET_COMMAND_TYPE_NORMAL = 1,
    DLMS_GET_COMMAND_TYPE_NEXT_DATA_BLOCK = 2,
    DLMS_GET_COMMAND_TYPE_WITH_LIST = 3
} DLMS_GET_COMMAND_TYPE;

typedef enum {
    DLMS_ASSOCIATION_RESULT_ACCEPTED = 0,
    DLMS_ASSOCIATION_RESULT_PERMANENT_REJECTED = 1,
    DLMS_ASSOCIATION_RESULT_TRANSIENT_REJECTED = 2
} DLMS_ASSOCIATION_RESULT;

typedef enum {
    PDU_DataAccessResult_Success = 0,
    PDU_DataAccessResult_HardwareFault = 1,
    PDU_DataAccessResult_TemporaryFailure = 2,
    PDU_DataAccessResult_ReadWriteDenied = 3,
    PDU_DataAccessResult_ObjectUndefined = 4,
    PDU_DataAccessResult_ObjectClassInconsistent = 9,
    PDU_DataAccessResult_ObjectUnavailable = 11,
    PDU_DataAccessResult_TypeUnmatched = 12,
    PDU_DataAccessResult_ScopeOfAccessViolated = 13,
    PDU_DataAccessResult_DataBlockUnavailable = 14,
    PDU_DataAccessResult_LongGetOrReadAborted = 15,
    PDU_DataAccessResult_NoLongGetOrReadInProgress = 16,
    PDU_DataAccessResult_LongSetOrWriteAborted = 17,
    PDU_DataAccessResult_NoLongSetOrWriteInProgress = 18,
    PDU_DataAccessResult_DataBlockNumberInvalid = 19,
    PDU_DataAccessResult_OtherReason = 250,
    PDU_DataAccessResult_need_use_block,
} PDU_DataAccessResult;

#ifdef __cplusplus
}
#endif

#endif // _DLMS_ENUM_H_
